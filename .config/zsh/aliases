#!/bin/zsh

# list
# ----
alias ll="ls -lh"
alias lr="ls -lrh"
alias la="ls -lAh"
alias lt="ls -lrth"
alias lta="ls -lrtAh"

# convenient cd
# -------------
chpwd() { ll }            # cd and ls
mc() { mv $@ && ${(P)#} } # mv and cd
# cc() { cp $@ && ${(P)#} } # cp and cd

# compression
# -----------
alias tarx='tar -xvf'
tarc() { tar -cvf $1.tar $1 }
zipd() { zip -rv $1.zip $1 }

# Shortcuts
# =========

becho() { echo '\033[0;36m'$@'\033[0m' }
gecho() { echo '\033[0;32m'$@'\033[0m' }
recho() { echo '\033[0;31m'$@'\033[0m' }

set_terminal_title() {
    printf "\033]2;%s\033\\" "$1";
}
alias stt=set_terminal_title

loop() {
    local time=1
    while getopts ":t:h" opt; do
        case $opt in
            t)
                time="$OPTARG"
                ;;
        esac
    done
    shift $((OPTIND-1))
    while sleep "$time"; do clear; $@; done
}

rmlink(){ [ -L "$1" ] && rm -v "$1" }

usv_enable() {
    [ -z "$1" ] && { echo "missing service arg" >&2; return 1 }
    [ -d "$USER_SVDIR/$1" ] || { echo "no such service '$1'" >&2; return 1 }
    [ -L "$USER_SVDIR/enabled/$1" ] && { echo "service '$1' is already enabled" >&2; return 1 }
    echo ln -s "../$1" "$USER_SVDIR/enabled/"
    ln -s "../$1" "$USER_SVDIR/enabled/"
}
__usv() {
    case "$1" in
        'enable')
            shift
            # expand the $@ args into an array here, handling globs/multiple service names/etc.
            # the `perl` command prefixes every wenv with $XDG_CONFIG_HOME/sv so we can expand based on what's in that directory,
            # while the `eval echo` handles the actual expansion
            local service_dirs=($(eval echo $(perl -pe "s|([^ ]+)|$XDG_CONFIG_HOME/sv/\1|g" <<< $@)))
            for s in $service_dirs; do usv_enable $(basename $s); done
            ;;
        'disable')
            shift
            local enabled_services=($(eval echo $(perl -pe "s|([^ ]+)|$XDG_CONFIG_HOME/sv/enabled/\1|g" <<< $@)))
            for s in $enabled_services; do rmlink $s; done
            ;;
        *)
            SVDIR=$USER_SVDIR sv $@
            ;;
    esac
}
alias usv='noglob __usv'

alias tm="tmux attach"
alias kak='kak_session'
alias apv='mpv --vid=no'
alias ts='tabbed -c -r2 surf -e x -SN'
alias xc='xclip -selection c'
alias fd='/usr/bin/fd --hidden'
alias ag="/usr/local/bin/ag --color-path='1;36' --color-line-number='0;37' --color-match='1;33' --hidden --ignore node_modules --ignore .git --ignore tags"
alias lg=lazygit

# curl with status code
alias scurl='curl -w "%{http_code}"'

# sleep/hibernate
sys() {
    arg="$1"
    shift
    case $arg in
        disk|hibernate) echo "disk" | sudo tee /sys/power/state ;;
        mem|sleep)      echo "mem"  | sudo tee /sys/power/state ;;

    esac
}
_sys() {
    COMPREPLY=()
    complete +o default

    local word="${COMP_WORDS[COMP_CWORD]}"
    local prev="${COMP_WORDS[COMP_CWORD-1]}"

    if (( COMP_CWORD == 1 )); then
        local opts='disk hibernate mem sleep'
        COMPREPLY=( $(compgen -W "${opts}" -- ${word}) )
    fi
}
complete -F _sys sys 2>/dev/null

# git
# ---

alias gc='git commit -m'
alias gcm='git commit -m'
alias gca='git commit -a'
alias gcam='git commit -am'
alias gs='git status'
alias gl="git log --pretty=format:'%C(auto)%h %ad %C(green)%s%Creset %C(auto)%d [%an]' --graph --date=format:'%Y-%m-%d %H:%M' --all"
alias gde="git diff --name-only --diff-filter=U | uniq | xargs $EDITOR"
alias gco='git checkout'
alias gbr='git for-each-ref --sort=-committerdate refs/heads/ --format="%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))"'

gb() {
    git blame $@ | while read hash user date time tz lineno line; do
        gecho "\n$hash $user $date $time $tz $lineno"
        echo "$line"
        becho "$(git log -1 --pretty=%s $hash)"
    done
}

# open pdf as plaintext
# ---------------------
tdf() {
    lesspipe.sh "$1" | less
}

# $EDITOR <today's_date>.md
# -------------------------
edit_today() {
    local format='%Y-%m-%d'
    local fname=`date +$format`
    [[ -n "$1" ]] && fname+="-$1"
    fname+=".md"
    $EDITOR "$fname"
}
alias et='edit_today'

edit_week() {
    local format='%Y-%m-%d'
    local which_monday='last-monday'
    [[ $(date +%a) == 'Mon' ]] && which_monday='this-monday'
    $EDITOR "`date -d$which_monday +$format`.md"
}
alias ew='edit_week'

# Don't forget
# ------------
# cuesplit && cd split && for f in *.flac; do ffmpeg -i $f -ab 320k -map_metadata 0 -id3v2_version 3 "${f%.*}.mp3"; done && mkdir mp3 && mv *.mp3 mp3
